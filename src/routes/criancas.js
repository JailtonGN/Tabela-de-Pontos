/**
 * üë∂ ROTAS DE CRIAN√áAS
 * 
 * Rotas para gerenciamento de crian√ßas/filhos
 * 
 * @author Jailton Gomes
 * @version 2.0.0
 */

const express = require('express');
const router = express.Router();
const { Crianca } = require('../../models/Pontos');
const ResponseHelper = require('../../utils/response-helper');

/**
 * GET /api/criancas
 * Lista todas as crian√ßas
 */
router.get('/', async (req, res) => {
    try {
        const criancas = await Crianca.find({ ativo: true }).sort({ nome: 1 });
        ResponseHelper.sendSuccess(res, criancas, 'Crian√ßas carregadas com sucesso');
    } catch (error) {
        console.error('‚ùå Erro ao buscar crian√ßas:', error);
        ResponseHelper.sendInternalError(res, error, 'buscar crian√ßas');
    }
});

/**
 * POST /api/criancas
 * Cria uma nova crian√ßa
 */
router.post('/', async (req, res) => {
    try {
        const { nome, emoji, cor } = req.body;
        
        if (!nome) {
            return ResponseHelper.sendError(res, 'Nome √© obrigat√≥rio', 400);
        }
        
        const crianca = new Crianca({
            id: Date.now(),
            nome: nome,
            emoji: emoji || 'üë∂',
            cor: cor || {
                nome: 'Azul',
                valor: '#4facfe',
                gradiente: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)'
            }
        });
        
        await crianca.save();
        
        ResponseHelper.sendSuccess(res, crianca, 'Crian√ßa criada com sucesso');
        
    } catch (error) {
        console.error('‚ùå Erro ao criar crian√ßa:', error);
        ResponseHelper.sendInternalError(res, error, 'criar crian√ßa');
    }
});

module.exports = router; 